version: '3.8'

services:
  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - db
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    image: area-server:latest
    privileged: true
    restart: always
    build:
      context: ./backend
      args:
        - DATABASE_URL=${DATABASE_URL}
    ports:
      - "8080:8080"
    volumes:
      - ./data:/app/data
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - GITHUB_ACCESS_TOKEN=${GITHUB_ACCESS_TOKEN}
      - BACKEND_URL=${BACKEND_URL}
      - FRONTEND_URL=${FRONTEND_URL}
    depends_on:
      - db
    command: >
      sh -c "npx prisma migrate deploy && npx prisma generate && npm run start"
    networks:
      - db

  client_web:
    image: area-client:latest
    build:
      context: ./frontend
    ports:
      - "8081:8081"
    volumes:
      - shared-volume:/shared
    depends_on:
      - server

volumes:
  shared-volume:
  db:

networks:
  db:
    driver: bridge
